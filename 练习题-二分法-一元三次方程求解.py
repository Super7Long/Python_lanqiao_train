# 题目描述
# 有形如：ax^3+bx^2+cx+d=0这样的一个一元三次方程。给出该方程中各
# 项的系数(a，b，c，d均为实数)，并约定该方程存在三个不同实根(根的范
# 围在 -100 至 100 之间)，且根与根之差的绝对值≥1。
# 要求由小到大依次在同一行输出这三个实根(根与根之间留有空格)，并精确
# 到小数点后 2 位。
#
# 输入描述
# 输入一行，4 个实数 a, b, c, d。
#
# 输出描述
# 输出一行，3 个实根，从小到大输出，并精确到小数点后 2 位。

# 样例输入
# 1 -5 -4 20
# 样例输出
# -2.00 2.00 5.00


a, b, c, d = list(map(int,input().split()))
y = lambda x: a*x**3 + b*x**2 + c*x + d  # 定义计算函数
i = -100
while i<=100:  # 遍历整个大区间[-100,100]
  l = i
  r = i + 1  # 定义长度为一的小区间
  y1 = y(l)
  y2 = y(r)
  if y1 == 0:  # 判断左边界是否为根
    print("{:.2f}".format(l), end=' ')
  if y1*y2<0:   # y1和y2异号，小区间内存在根
    for _ in range(100):  # 二分法遍历小区间100次，达到1/2^100的精度
      mid = (l+r)/2
      if y(l)*y(mid)<=0:  # 根在左半部分
        r = mid
      else:   # 根在右半部分
        l = mid
    else:  # 打印右边界
      print("{:.2f}".format(r), end=' ')
  i += 1
